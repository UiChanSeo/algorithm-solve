"""
아래 코드는 프로그래머스의 문제입니다.

△△ 게임대회가 개최되었습니다. 이 대회는 N명이 참가하고, 토너먼트 형식으로 진행됩니다.
N명의 참가자는 각각 1부터 N번을 차례대로 배정받습니다. 그리고, 1번↔2번, 3번↔4번, ... ,
N-1번↔N번의 참가자끼리 게임을 진행합니다. 각 게임에서 이긴 사람은 다음 라운드에 진출할 수
있습니다. 이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받습니다.
만약 1번↔2번 끼리 겨루는 게임에서 2번이 승리했다면 다음 라운드에서 1번을 부여받고, 3번↔4번에서
겨루는 게임에서 3번이 승리했다면 다음 라운드에서 2번을 부여받게 됩니다. 게임은 최종 한 명이 남을
때까지 진행됩니다.

이때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서
만나는지 궁금해졌습니다. 게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 함수 solution의
매개변수로 주어질 때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇
번째 라운드에서 만나는지 return 하는 solution 함수를 완성해 주세요. 단, A번 참가자와 B번 
참가자는 서로 붙게 되기 전까지 항상 이긴다고 가정합니다.

제한사항
N : 21 이상 220 이하인 자연수 (2의 지수 승으로 주어지므로 부전승은 발생하지 않습니다.)
A, B : N 이하인 자연수 (단, A ≠ B 입니다.)
입출력 예
N	A	B	answer
8	4	7	3

==>>

이 문제는 a와 b 사이의 diff를 구하여 2로 나누어 지는 횟수를 구하였습니다.
diff는  b가 a보다는 크고, 둘 가 홀수로 변환하여 diff를 구하였습니다.
그리고, 2로 나누다가 홀수가 되는 경우는 +1을 하여 나누었습니다.

"""

def solution(n,a,b):
    answer = 0

    new_a = a
    new_b = b

    if new_a % 2 == 0:
        new_a = new_a - 1

    if new_b % 2 == 0:
        new_b = new_b - 1

    diff = new_b - new_a

    while diff > 1:
        answer += 1
        if diff % 2 == 1:
            diff += 1
        diff /= 2
        #print(f'diff = {diff}, answer = {answer}')


    return answer + 1


if __name__=='__main__':
    datas = [[8,4,7,3],
             [8,5,7,2],
             [8,7,8,1],
             [8,1,2,1],
             [25,7,23,5],
             [25,5,23,6],
             [25,1,23,6],
             [25,1,2,1],
             [37,8,36,6],
             [100,48,89,7]]
    for data in datas:
        ans = solution(data[0], data[1], data[2])
        print(f'{data[0]},{data[1]},{data[2]} = {ans}/{data[3]}')
